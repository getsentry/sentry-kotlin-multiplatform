name: 'Lib: sentry-kotlin-multiplatform'
on:
  push:
    branches:
      - main
      - release/**
  pull_request:
    paths:
      - '.github/workflows/kotlin-multiplatform.yml'
      - 'kotlin-multiplatform/**'
      - 'sentry-samples/**'
      - 'buildSrc/src/**'
      - '!**/*.md'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-apple:
    runs-on: macos-latest-xlarge

    steps:
      - uses: actions/checkout@v5

      - name: JDK setup
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin

      - name: Cached Konan
        uses: actions/cache@v4
        with:
          path: ~/.konan
          key: ${{ runner.os }}-konan-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-konan-

      - name: Cached Gradle
        uses: gradle/gradle-build-action@ac2d340dc04d9e1113182899e983b5400c17cda1

      - name: Apple build
        run: |
          ./scripts/build-apple.sh sentry-kotlin-multiplatform
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}

  build-apple-samples:
    runs-on: macos-latest-xlarge

    steps:
      - uses: actions/checkout@v5

      - name: JDK setup
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin

      - name: Cached Konan
        uses: actions/cache@v4
        with:
          path: ~/.konan
          key: ${{ runner.os }}-konan-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-konan-

      - name: Cached Gradle
        uses: gradle/gradle-build-action@ac2d340dc04d9e1113182899e983b5400c17cda1

      - name: Apple build
        run: |
          make buildAppleSamples

  build-jvm:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5

      - name: JDK setup
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin

      - name: Cached Gradle
        uses: gradle/gradle-build-action@ac2d340dc04d9e1113182899e983b5400c17cda1

      - name: JVM build
        run: |
          ./scripts/build-jvm.sh sentry-kotlin-multiplatform
          make createCoverageReports
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          GRADLE_OPTS: -Dorg.gradle.jvmargs="-Xmx3g"

      # Kover coverage currently only works for JVM
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@0565863a31f2c772f9f0395002a31e3f06189574 # pin@v4
        with:
          name: sentry-kotlin-multiplatform
          token: ${{ secrets.CODECOV_TOKEN }}

  test-samples:
    runs-on: macos-latest-xlarge

    steps:
      - uses: actions/checkout@v5

      - name: JDK setup
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin

      - name: Cached Gradle
        uses: gradle/gradle-build-action@ac2d340dc04d9e1113182899e983b5400c17cda1

      - name: Test samples
        run: |
          ./gradlew allTests -p sentry-samples
